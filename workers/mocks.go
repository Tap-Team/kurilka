// Code generated by MockGen. DO NOT EDIT.
// Source: userworker.go

// Package workers is a generated GoMock package.
package workers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserWorker is a mock of UserWorker interface.
type MockUserWorker struct {
	ctrl     *gomock.Controller
	recorder *MockUserWorkerMockRecorder
}

// MockUserWorkerMockRecorder is the mock recorder for MockUserWorker.
type MockUserWorkerMockRecorder struct {
	mock *MockUserWorker
}

// NewMockUserWorker creates a new mock instance.
func NewMockUserWorker(ctrl *gomock.Controller) *MockUserWorker {
	mock := &MockUserWorker{ctrl: ctrl}
	mock.recorder = &MockUserWorkerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserWorker) EXPECT() *MockUserWorkerMockRecorder {
	return m.recorder
}

// AddAllUsers mocks base method.
func (m *MockUserWorker) AddAllUsers(ctx context.Context, users []*User) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddAllUsers", ctx, users)
}

// AddAllUsers indicates an expected call of AddAllUsers.
func (mr *MockUserWorkerMockRecorder) AddAllUsers(ctx, users interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddAllUsers", reflect.TypeOf((*MockUserWorker)(nil).AddAllUsers), ctx, users)
}

// AddUser mocks base method.
func (m *MockUserWorker) AddUser(ctx context.Context, user User) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddUser", ctx, user)
}

// AddUser indicates an expected call of AddUser.
func (mr *MockUserWorkerMockRecorder) AddUser(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUser", reflect.TypeOf((*MockUserWorker)(nil).AddUser), ctx, user)
}

// RemoveUser mocks base method.
func (m *MockUserWorker) RemoveUser(ctx context.Context, userId int64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RemoveUser", ctx, userId)
}

// RemoveUser indicates an expected call of RemoveUser.
func (mr *MockUserWorkerMockRecorder) RemoveUser(ctx, userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveUser", reflect.TypeOf((*MockUserWorker)(nil).RemoveUser), ctx, userId)
}
